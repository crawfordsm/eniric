environment:

  matrix:
    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python

    - PYTHON_VERSION: 3.5
      MINICONDA: C:\Miniconda3
      PYTHON_ARCH: "32"
    - PYTHON_VERSION: 3.6
      MINICONDA: C:\Miniconda3
      PYTHON_ARCH: "32"
    - PYTHON_VERSION: 3.5
      MINICONDA: C:\Miniconda3-x64
      PYTHON_ARCH: "64"
    - PYTHON_VERSION: 3.6
      MINICONDA: C:\Miniconda3-x64
      PYTHON_ARCH: "64"

init:
  - "ECHO %PYTHON_VERSION% %MINICONDA% %PYTHON_ARCH%"

install:
# Use conda on windows
  - cmd: "set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
  - cmd: conda config --set always_yes yes --set changeps1 no
  - cmd: conda update -q conda
  - cmd: conda config --add channels conda-forge
  - cmd: conda info -a
  - cmd: "conda create -q -n test-environment python=%PYTHON_VERSION% numpy scipy"
  - cmd: activate test-environment
  - cmd: pip install coverage

# We need wheel installed to build wheels
  - cmd: "pip install wheel"

  # Installing Starfish
  - cmd: "cd c:\\projects"
  - cmd: "git clone https://github.com/jason-neal/Starfish.git"
  - cmd: "cd c:\\projects\\Starfish"
  - cmd: "pip install -r requirements.txt"
  - cmd: "git checkout windows"   # Especially configured to build on windows
  - cmd: "python setup.py develop"

  # Installing eniric now
  - cmd: "cd c:\\projects\\eniric"
  - cmd: "pip install -r requirements.txt"
  - cmd: "pip install -r requirements_dev.txt"
  - cmd: "python setup.py install"

  # Setup config and make data
  # This is not the best place to put this but before_test didn't work.
  - cmd: "move tests\\config.yaml config.yaml"
  # Generate test data
  - cmd: "make_test_data.py"

build: off

test_script:
  - cmd: "pytest --cov=. --cov-report term-missing --durations 5"
  - cmd: "coverage xml -i"

after_test:
  # This step builds your wheels.
   - cmd: "python setup.py bdist_wheel"

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.
